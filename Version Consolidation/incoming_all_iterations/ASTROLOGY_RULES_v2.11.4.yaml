# ======================================================================
# ASTROLOGY_RULES_v2.11.4.yaml
# Unified ruleset with modules, submodules, visualization, observability,
# embedded CSV schema, performance/interop patches, and ops guardrails.
# ======================================================================

meta:
  name: "Astrology Unified Rules"
  version: "2.11.4"
  description: >
    Tokenized subjects (USER_*), modular architecture (core/shared/subjects/
    personal/houses/mundane/visualization/observability/schemas), house channels,
    sign overrides, visualization formats, observability hooks, embedded CSV schema,
    performance tuning, and strict provenance. UI resolves tokens to names via
    Individuals CSV at render time (with consent/redaction).
  defaults:
    house_system: "whole"
    timezone: "America/New_York"
    node_true: true
    relocational: false
    sidereal: false
    fixed_stars_precess: true
    tob_estimate_tolerance: "Â±00:45"
  module_versions:
    core:     "1.1.0"
    shared:   "1.1.0"
    subjects: "1.0.0"
    personal: "1.0.1"
    houses:   "1.0.2"
    mundane:  "1.0.0"
    visualization: "1.0.0"
    observability: "1.0.0"
    schemas:  "1.0.1"
  module_hashes:
    core: null
    shared: null
    subjects: null
    personal: null
    houses: null
    mundane: null
    visualization: null
    observability: null
    schemas: null
  learned_weights:
    enabled: false
    last_trained_at: null
    aspects: {}
    channels: {}
  learned_weights_source: null
  learned_weights_warning:
    show_if_enabled_without_model: true
    message: "Learned weights enabled but no model source configured (meta.learned_weights_source). Falling back to rule-based weights."

# ----------------------------------------------------------------------
# FRAMEWORK GROUPS (for provenance, caching, toggling)
# ----------------------------------------------------------------------
framework_groups:
  governance_policy:        { label: "Governance & Policy",            always_on: true }
  resolution_planning:      { label: "Resolution & Planning",           always_on: true }
  data_validation:          { label: "Data & Validation",               always_on: true }
  execution_engine:         { label: "Execution Engine",                always_on: true }
  scoring_stacking:         { label: "Scoring & Stacking",              always_on: true }
  normalization_thresholds: { label: "Normalization & Thresholding",    always_on: true }
  uncertainty_mgmt:         { label: "Uncertainty Management",          always_on: true }
  identity_subjects:        { label: "Identity & Subjects",             always_on: true }
  semantics_shared:         { label: "Semantics (Shared)",              always_on: true }
  visualization_orchestration:{ label: "Visualization Orchestration",   always_on: false }
  observability_provenance: { label: "Observability & Provenance",      always_on: true }
  profiles_presets:         { label: "Profiles & Presets",              always_on: true }

# ----------------------------------------------------------------------
# PROVIDERS & INGEST
# ----------------------------------------------------------------------
providers:
  ephemeris:   { default: "local_csv", allowed: ["local_csv","remote_store","db"] }
  natal:       { default: "local_csv", allowed: ["local_csv","remote_store","db"] }
  event_log:   { default: "local_csv", allowed: ["local_csv","remote_store","db"] }
  fixed_stars: { default: "local_csv", allowed: ["local_csv","remote_store","db"] }
  csv_engine:
    preferred: "pyarrow"
    fallback:  "pandas"
    parse_options:
      chunksize_rows: 200000
      parallel_readers: "auto"
      low_memory: true
      dtype_coercion: "vectorized"
      timezone: "America/New_York"
  bindings:
    individuals:          { uses_projection: true }
    event_log:            { uses_projection: true }
    ephemeris_normalized: { uses_projection: true }

# ----------------------------------------------------------------------
# VALIDATION / IO / SCHEMA
# ----------------------------------------------------------------------
validation:
  schema:
    source: "embedded"
    module: "schemas"
    version_required: "v1.5.0"
    files_map:
      individuals:          "schema:individuals"
      event_log:            "schema:event_log"
      ephemeris_normalized: "schema:ephemeris_normalized"
    compiled_cache:
      enable: true
      key: "v{schemas.version}:{schemas.hash}:{projection_signature}"
      invalidate_when:
        - "schemas.hash_changed"
        - "projection_signature_changed"
        - "engine.resolver.plan_hash_changed"
  csv_rules:
    list_separator: "; "
    datetime_formats: ["YYYY-MM-DD", "YYYY-MM-DD HH:MM"]
    time_formats: ["HH:MM","HH:MM:SS"]
    timezone_default: "America/New_York"
  projection:
    enable: true
    presets:
      subjects_min:
        individuals: [id, preferred_name, display_name, full_name, consent_name_display, dob, tob_known, tob, tz, exclude]
      houses_loc:
        individuals: [id, coords_lat, coords_lon, tz, tob_known, tob]
      event_log_min:
        event_log: [id, date_logged, when, who, details, external_likelihood_pct, internal_likelihood_pct]
      ephemeris_min:
        ephemeris_normalized: [datetime_local, datetime_utc, body, longitude_deg, speed_deg_per_day, retrograde]
    default_sets: ["subjects_min","ephemeris_min"]
    profile_sets:
      AP-HOUSES: ["subjects_min","houses_loc","ephemeris_min"]
      AP-DEBUG:  ["subjects_min","houses_loc","event_log_min","ephemeris_min"]
      AP-SUPER:  ["subjects_min","event_log_min","ephemeris_min"]
  referential_integrity:
    enable: true
    checks:
      - name: "event_log_who_resolves"
        from_table: "event_log"
        from_col: "who"
        to_table: "individuals"
        to_col: "id"
        on_missing: "warn_and_mark_unknown"
        emit_fix_hint: "Ensure event_log.who equals Individuals 'id' (not display_name)."
      - name: "individuals_primary_key_unique"
        table: "individuals"
        key: ["id"]
        on_violation: "fail_with_message"
  preflight:
    on_invalid_row: "skip_and_log"
    on_missing_required_file: "halt_and_prompt_override"
  failure_policy:
    strict_mode: false
    non_critical_datasets: ["data:fixed_stars","shared:ml_sandbox"]
    on_violation: "warn_and_skip"
  file_policy:
    reject_empty_mnt_data: true
    manifest_enforce: true
  dedupe_event_log:
    key_fields: ["datetime","who","layer","transit_body","natal_body","aspect"]
    keep: "first"
  health_checks:
    verify_required_providers_before_compute: true
    fail_on_missing_provider: true

# ----------------------------------------------------------------------
# ENGINE / RUNTIME / CACHING / RESOLVER
# ----------------------------------------------------------------------
engine:
  default_profile: "AP-SUPER"
  dynamic_range: true
  context_autoload: true
  ephemeris_slicing:
    enable: true
    pad_minutes: 30
    pad_minutes_fast: 90
    fast_actors: ["Moon","Mercury","Venus","Sun","Mars","Asc","MC","Chiron"]
    include_only_bodies_in_active_layers: true
  performance:
    vectorized_angles: true
    sparse_aspect_pass: true
    two_pass_detection: { enabled: true, coarse_bin_hours: 3, refine_radius_hours: 6 }
    adaptive_resolution:
      enable: true
      hourly_default: true
      minute_refine_for_fast_actors: { enable: true, actors: ["Moon","Asc","MC"], refine_to_minutes: 15 }
    caching:
      data_slice_cache: true
      data_slice_key_fields: ["who","window","bodies","providers","house_system"]
      results_cache: true
      keys_include_hashes: true
      include_active_submodules_in_key: true
      include_module_versions_in_key: true
      compact_keys: true
      compute_cache_ignore_submodules: ["viz:*","subjects:*"]
      render_cache_include_submodules: ["viz:*"]
      include_framework_groups_in_key: true
    parallelism: { enable_multiprocessing: true, num_workers: "auto", split_by: ["who","transit_body"] }
    memory: { stream_long_windows: true, chunk_days: 14 }
  dst_guardrails: { tz_aware_bins: true, record_local_and_utc: true }
  progressions:
    granularity: "secondary"    # "secondary" | "secondary+tertiary"
    alias:
      eng:progressed: eng:progressed_secondary
  resolver:
    group: resolution_planning
    lint_dependencies: true
    fail_on_cycles: true
    fail_on_unknown_profile: true
    emit_plan_banner: true
    log_cost_estimates: true
    plan_hash: true
    policies:
      auto_disable_modules_by_profile:
        default_disable: ["mundane"]
        exceptions:
          AP-MUNDANE: []
    name_guard:
      disallowed_identifiers_regex:
        - "(?i)\\bchris\\b"
        - "(?i)\\bremy\\b"
        - "(?i)\\bcomposite\\b"
      scope: ["profiles","submodules.presets","testing.cli.commands","runtime.args.who"]
      on_violation: "fail_with_message"
      hint: "Use tokens: USER_PRIMARY, USER_SECONDARY, USER_COMPOSITE, ENTITY_USA."
    value_linter:
      deny_if_negative: ["scoring.per_hit.layer_orb_adjust.*","house_channels.angular_weighting.*"]
      deny_if_zero: ["normalization.scale_max","normalization.scale_min"]
      on_violation: "fail_with_message"
  runtime_limits:
    enable: true
    max_wall_seconds: 120
    max_cpu_seconds: 120
    max_memory_mb: 2048
    degrade_plan:
      - "disable: eng:progressed_tertiary"
      - "disable: viz:calendar_heatmap"
      - "disable: viz:scenario_compare"
      - "disable: shared:ml_sandbox"
  rng:
    seed_mode: "auto"       # "auto" | "fixed"
    fixed_seed: 41639
  tz_banner:
    emit: true

# ----------------------------------------------------------------------
# MODULES REGISTRY
# ----------------------------------------------------------------------
modules_registry: ["core","shared","subjects","personal","houses","mundane","visualization","observability","schemas"]

# ----------------------------------------------------------------------
# SUBMODULES (registry, aliases, presets, selector, perf)
# ----------------------------------------------------------------------
submodules:
  registry:
    # DATA
    data:ephem_hourly:    { kind: "data",   group: data_validation, provides: ["transits_fast","stations"],        depends_on: [] }
    data:ephem_monthly:   { kind: "data",   group: data_validation, provides: ["outer_cycles","eclipse_windows"],  depends_on: [] }
    data:natal_personal:  { kind: "data",   group: data_validation, provides: ["natal_points","houses"],           depends_on: [] }
    data:natal_partner:   { kind: "data",   group: data_validation, provides: ["partner_points","partner_houses"], depends_on: [] }
    data:natal_composite: { kind: "data",   group: data_validation, provides: ["composite","davison"],             depends_on: ["data:natal_personal","data:natal_partner"] }
    data:natal_usa:       { kind: "data",   group: data_validation, provides: ["usa_natal"],                       depends_on: [] }
    data:fixed_stars:     { kind: "data",   group: data_validation, provides: ["stars"],                           depends_on: [] }
    data:event_log:       { kind: "data",   group: data_validation, provides: ["labels_training"],                 depends_on: [] }

    # ENGINE FEATURES
    eng:progressed_secondary:  { kind: "engine", group: execution_engine, provides: ["progressions_secondary"],                    depends_on: ["data:ephem_monthly","data:natal_personal"] }
    eng:progressed_tertiary:   { kind: "engine", group: execution_engine, provides: ["progressions_tertiary"],                    depends_on: ["data:ephem_monthly","data:natal_personal"] }
    eng:solar_arc:             { kind: "engine", group: execution_engine, provides: ["solar_arc"],                                 depends_on: ["data:ephem_monthly","data:natal_personal"] }
    eng:declination:           { kind: "engine", group: execution_engine, provides: ["declination"],                               depends_on: ["data:ephem_hourly"] }
    eng:harmonics:             { kind: "engine", group: execution_engine, provides: ["harmonics"],                                 depends_on: ["data:natal_personal"] }
    eng:draconic:              { kind: "engine", group: execution_engine, provides: ["draconic"],                                  depends_on: ["data:natal_personal"] }
    eng:eclipses:              { kind: "engine", group: execution_engine, provides: ["eclipses"],                                  depends_on: ["data:ephem_monthly"] }
    eng:house_channels:        { kind: "engine", group: execution_engine, provides: ["house_corridors"],                           depends_on: ["data:natal_personal"] }
    eng:cycles_flashpoints:    { kind: "engine", group: execution_engine, provides: ["ingresses","stations","exacts_clustered","returns"], depends_on: ["data:ephem_hourly","data:ephem_monthly"] }
    eng:lifecycle_phases_core: { kind: "engine", group: execution_engine, provides: ["saturn_cycles","nodal_cycles","uranus_opposition","progressed_lunations"], depends_on: ["data:ephem_monthly","eng:progressed_secondary"] }
    eng:eclipses_plus:         { kind: "engine", group: execution_engine, provides: ["eclipse_grade","saros_proximity","perigee_flag"], depends_on: ["eng:eclipses"] }

    # CORE
    core:validation_io:     { kind: "core", group: data_validation,           provides: ["schema_checks","manifest_policy"],  depends_on: [] }
    core:engine_runtime:    { kind: "core", group: execution_engine,          provides: ["perf","caching","parallel","dst_guard"], depends_on: [] }
    core:scoring_model:     { kind: "core", group: scoring_stacking,          provides: ["scoring","stacking"],              depends_on: [] }
    core:normalization:     { kind: "core", group: normalization_thresholds,  provides: ["zscore_tanh","robust_fallback"],   depends_on: [] }
    core:uncertainty:       { kind: "core", group: uncertainty_mgmt,          provides: ["tob_monte_carlo","attenuation"],   depends_on: [] }
    core:provenance_tests:  { kind: "core", group: observability_provenance,  provides: ["hashes","fixtures","cli"],         depends_on: [] }
    core:output_graph_base: { kind: "core", group: observability_provenance,  provides: ["non_negotiables","qa_checklist","labels"], depends_on: [] }

    # SHARED
    shared:channels_core:       { kind: "shared", group: semantics_shared, provides: ["semantic_channels"],               depends_on: [] }
    shared:channels_signs:      { kind: "shared", group: semantics_shared, provides: ["sign_overrides"],                  depends_on: ["shared:channels_core"] }
    shared:channels_signs_lite: { kind: "shared", group: semantics_shared, provides: ["sign_overrides_lite"],             depends_on: ["shared:channels_core"] }
    shared:channels_houses:     { kind: "shared", group: semantics_shared, provides: ["channel_house_affinities"],        depends_on: ["shared:channels_core","eng:house_channels"] }
    shared:house_bridge:        { kind: "shared", group: semantics_shared, provides: ["house_to_channel_bridge"],         depends_on: ["shared:channels_core","eng:house_channels"] }
    shared:viz_core:            { kind: "shared", group: visualization_orchestration, provides: ["corridor_plotting"],               depends_on: ["core:output_graph_base"] }
    shared:viz_event_tpl:       { kind: "shared", group: visualization_orchestration, provides: ["type_lines"],                      depends_on: ["shared:viz_core"] }
    shared:viz_house_views:     { kind: "shared", group: visualization_orchestration, provides: ["house_plots"],                     depends_on: ["eng:house_channels","shared:viz_core"] }
    shared:ml_weights:          { kind: "shared", group: semantics_shared, provides: ["learned_weights"],                 depends_on: ["data:event_log"] }
    shared:user_bias:           { kind: "shared", group: semantics_shared, provides: ["per_user_bias"],                   depends_on: ["data:event_log"] }
    shared:lifecycle_phases_bias:{ kind: "shared", group: semantics_shared, provides: ["phase_context_bias"],             depends_on: ["eng:lifecycle_phases_core"] }
    shared:essential_dignities: { kind: "shared", group: semantics_shared, provides: ["dignity_delta"],                   depends_on: [] }
    shared:channel_micro_rel:   { kind: "shared", group: semantics_shared, provides: ["relationship_microchannels"],      depends_on: ["shared:channels_core"] }
    shared:ml_sandbox:          { kind: "shared", group: semantics_shared, provides: ["suggested_weights"],               depends_on: ["data:event_log"] }

    # VISUALIZATION
    viz:line_corridor:         { kind: "viz", group: visualization_orchestration, provides: ["corridor_line"],    depends_on: ["shared:channels_core"] }
    viz:overlay_multi_subject: { kind: "viz", group: visualization_orchestration, provides: ["overlay_lines"],    depends_on: ["viz:line_corridor"] }
    viz:event_bands:           { kind: "viz", group: visualization_orchestration, provides: ["event_bands"],      depends_on: ["viz:line_corridor"] }
    viz:channel_stack:         { kind: "viz", group: visualization_orchestration, provides: ["stacked_channels"], depends_on: ["shared:channels_core"] }
    viz:house_radar:           { kind: "viz", group: visualization_orchestration, provides: ["house_radar"],      depends_on: ["eng:house_channels"] }
    viz:house_stream:          { kind: "viz", group: visualization_orchestration, provides: ["house_timeline"],   depends_on: ["eng:house_channels"] }
    viz:theme_light:           { kind: "viz", group: visualization_orchestration, provides: ["theme:light"],      depends_on: [] }
    viz:theme_dark:            { kind: "viz", group: visualization_orchestration, provides: ["theme:dark"],       depends_on: [] }
    viz:style_minimal:         { kind: "viz", group: visualization_orchestration, provides: ["style:minimal"],    depends_on: [] }
    viz:style_detailed:        { kind: "viz", group: visualization_orchestration, provides: ["style:detailed"],   depends_on: [] }
    viz:access_colorblind:     { kind: "viz", group: visualization_orchestration, provides: ["palette_cb_safe"],  depends_on: [] }
    viz:tooltip_annotations:   { kind: "viz", group: visualization_orchestration, provides: ["hover_tooltips"],   depends_on: ["viz:line_corridor"] }
    viz:label_density_auto:    { kind: "viz", group: visualization_orchestration, provides: ["auto_labels"],      depends_on: [] }
    viz:export_png:            { kind: "viz", group: visualization_orchestration, provides: ["export:png"],       depends_on: [] }
    viz:export_pdf:            { kind: "viz", group: visualization_orchestration, provides: ["export:pdf"],       depends_on: [] }
    viz:export_csv_bins:       { kind: "viz", group: visualization_orchestration, provides: ["export:csv_bins"],  depends_on: [] }
    viz:scenario_compare:      { kind: "viz", group: visualization_orchestration, provides: ["compare_overlay","compare_tiles"], depends_on: ["viz:line_corridor"] }
    viz:calendar_heatmap:      { kind: "viz", group: visualization_orchestration, provides: ["calendar_grid","weekly_bands"],     depends_on: ["viz:line_corridor"] }

    # SUBJECTS
    subjects:resolver:         { kind: "subjects", group: identity_subjects, provides: ["subject_map","display_names","token_resolution"], depends_on: [] }
    subjects:composite_builder:{ kind: "subjects", group: identity_subjects, provides: ["composite_pair","davison_pair"],  depends_on: ["subjects:resolver","data:natal_personal","data:natal_partner"] }
    subjects:policy_gate:      { kind: "subjects", group: governance_policy, provides: ["inclusion_prompts","usa_gate_enforcement","privacy_redaction"], depends_on: ["subjects:resolver"] }

    # HOUSES
    houses:system_sweep:       { kind: "engine", group: uncertainty_mgmt, provides: ["house_system_consensus"], depends_on: ["eng:house_channels","data:natal_personal"] }
    houses:tenants_sigmoid:    { kind: "engine", group: semantics_shared, provides: ["tenants_distance_curve_sigmoid"], depends_on: ["eng:house_channels"] }

    # OBSERVABILITY
    obs:alert_hooks:           { kind: "obs", group: observability_provenance, provides: ["watchlist_triggers"], depends_on: [] }

    # SCHEMAS
    schema:individuals:        { kind: "schema", group: data_validation, provides: ["schema_individuals"], depends_on: [] }
    schema:event_log:          { kind: "schema", group: data_validation, provides: ["schema_event_log"],  depends_on: [] }
    schema:ephemeris_normalized:{ kind: "schema", group: data_validation, provides: ["schema_ephemeris_normalized"], depends_on: [] }
    schema:validator:          { kind: "schema", group: data_validation, provides: ["schema_validators"], depends_on: ["schema:individuals","schema:event_log","schema:ephemeris_normalized"] }
    schema:compiler:           { kind: "schema", group: data_validation, provides: ["compiled_validators","schemas.hash"], depends_on: ["schema:individuals","schema:event_log","schema:ephemeris_normalized"] }
    schema:lint:               { kind: "schema", group: data_validation, provides: ["schema_lint_report"], depends_on: ["schema:compiler"] }
    schema:diagnostics:        { kind: "schema", group: data_validation, provides: ["schema_diagnostics"], depends_on: ["schema:lint","schema:compiler"] }

  aliases:
    "shared:viz_core"      : "viz:line_corridor"
    "shared:viz_event_tpl" : "viz:event_bands"
    "shared:viz_house_views": "viz:house_radar"

  presets:
    transit_only_minimal:
      include:
        - core:validation_io
        - core:engine_runtime
        - core:scoring_model
        - core:normalization
        - data:ephem_hourly
        - data:natal_personal
        - shared:channels_core
        - shared:channels_signs_lite
        - subjects:resolver
        - viz:line_corridor
        - viz:theme_light
        - viz:style_minimal
        - viz:access_colorblind
    full_day_super:
      include:
        - core:validation_io
        - core:engine_runtime
        - core:scoring_model
        - core:normalization
        - core:uncertainty
        - data:ephem_hourly
        - data:ephem_monthly
        - data:natal_personal
        - eng:progressed_secondary
        - eng:solar_arc
        - eng:house_channels
        - shared:channels_core
        - shared:channels_signs
        - shared:channels_houses
        - shared:house_bridge
        - viz:line_corridor
        - viz:overlay_multi_subject
        - viz:event_bands
        - viz:channel_stack
        - viz:house_radar
        - viz:theme_dark
        - viz:style_detailed
        - viz:access_colorblind
        - viz:tooltip_annotations
        - viz:label_density_auto
        - viz:export_png
        - subjects:resolver
        - subjects:policy_gate
        - eng:cycles_flashpoints
        - eng:lifecycle_phases_core
        - shared:lifecycle_phases_bias
        - shared:essential_dignities
        - viz:scenario_compare
        - viz:calendar_heatmap
        - eng:eclipses_plus
    full_day_debug:
      include:
        - core:validation_io
        - core:engine_runtime
        - core:scoring_model
        - core:normalization
        - core:uncertainty
        - core:provenance_tests
        - data:ephem_hourly
        - data:ephem_monthly
        - data:natal_personal
        - eng:progressed_secondary
        - eng:solar_arc
        - eng:house_channels
        - shared:channels_core
        - shared:channels_signs
        - shared:channels_houses
        - shared:house_bridge
        - viz:line_corridor
        - viz:overlay_multi_subject
        - viz:event_bands
        - viz:house_stream
        - viz:theme_dark
        - viz:style_detailed
        - viz:access_colorblind
        - viz:tooltip_annotations
        - viz:label_density_auto
        - viz:export_png
        - viz:export_csv_bins
        - subjects:resolver
        - subjects:policy_gate
        - eng:cycles_flashpoints
        - eng:lifecycle_phases_core
        - shared:lifecycle_phases_bias
        - shared:essential_dignities
        - viz:scenario_compare
        - viz:calendar_heatmap
        - houses:system_sweep
        - houses:tenants_sigmoid
        - shared:ml_sandbox
        - obs:alert_hooks
        - eng:eclipses_plus
    house_focus_primary:
      include:
        - core:validation_io
        - core:engine_runtime
        - core:scoring_model
        - core:normalization
        - data:natal_personal
        - data:ephem_hourly
        - eng:house_channels
        - shared:channels_core
        - shared:channels_houses
        - viz:line_corridor
        - viz:house_radar
        - viz:theme_light
        - viz:style_detailed
        - viz:access_colorblind
        - subjects:resolver
        - houses:system_sweep
        - houses:tenants_sigmoid
    relationship_day:
      include:
        - core:validation_io
        - core:engine_runtime
        - core:scoring_model
        - core:normalization
        - core:uncertainty
        - data:ephem_hourly
        - data:ephem_monthly
        - data:natal_personal
        - data:natal_partner
        - data:natal_composite
        - eng:progressed_secondary
        - eng:solar_arc
        - eng:house_channels
        - shared:channels_core
        - shared:channels_signs
        - shared:channels_houses
        - shared:house_bridge
        - viz:line_corridor
        - viz:overlay_multi_subject
        - viz:event_bands
        - viz:house_radar
        - viz:theme_dark
        - viz:style_detailed
        - viz:export_png
        - subjects:resolver
        - subjects:policy_gate
        - subjects:composite_builder
        - eng:cycles_flashpoints
        - shared:essential_dignities
        - viz:scenario_compare
    mundane_focus:
      include:
        - core:validation_io
        - core:engine_runtime
        - core:scoring_model
        - core:normalization
        - data:natal_usa
        - data:ephem_monthly
        - eng:eclipses
        - viz:line_corridor
        - viz:event_bands
        - viz:theme_light
        - viz:style_minimal
        - viz:export_pdf
        - subjects:resolver
        - subjects:policy_gate
    phases_focus:
      include:
        - core:validation_io
        - core:engine_runtime
        - core:scoring_model
        - core:normalization
        - data:ephem_hourly
        - data:ephem_monthly
        - data:natal_personal
        - eng:progressed_secondary
        - eng:lifecycle_phases_core
        - shared:lifecycle_phases_bias
        - viz:calendar_heatmap
        - viz:line_corridor

  select:
    resolve_dependencies: true
    include: []
    exclude: []

  perf:
    lazy_load_data: true
    lazy_compute_layers: true
    lazy_plot: true
    cache_key_includes_submodules: true

# ----------------------------------------------------------------------
# MODULES (core/shared/subjects/personal/houses/mundane/visualization/observability/schemas)
# ----------------------------------------------------------------------
modules:
  core:
    group: execution_engine
    enabled: true
    layers:
      validation_io:     { enabled: true, submodule: core:validation_io }
      engine_runtime:    { enabled: true, submodule: core:engine_runtime }
      scoring_model:     { enabled: true, submodule: core:scoring_model }
      normalization:     { enabled: true, submodule: core:normalization }
      uncertainty:       { enabled: true, submodule: core:uncertainty }
      provenance_testing:{ enabled: false, submodule: core:provenance_tests }
      output_graph_base: { enabled: true, submodule: core:output_graph_base }

  shared:
    group: semantics_shared
    enabled: true
    layers:
      channels_core:      { enabled: true, submodule: shared:channels_core }
      channels_signs:     { enabled: true, submodule: shared:channels_signs }
      channels_signs_lite:{ enabled: false, submodule: shared:channels_signs_lite }
      channels_houses:    { enabled: true, submodule: shared:channels_houses }
      house_bridge:       { enabled: true, submodule: shared:house_bridge }
      ml_learned_weights: { enabled: false, submodule: shared:ml_weights }
      ml_user_bias:       { enabled: false, submodule: shared:user_bias }
      lifecycle_phases_bias:{ enabled: false, submodule: shared:lifecycle_phases_bias }
      essential_dignities: { enabled: false, submodule: shared:essential_dignities }
      channel_micro_rel:   { enabled: false, submodule: shared:channel_micro_rel }

  subjects:
    group: identity_subjects
    enabled: true
    layers:
      resolver:        { enabled: true, submodule: subjects:resolver }
      policy_gate:     { enabled: true, submodule: subjects:policy_gate }
      composite_build: { enabled: false, submodule: subjects:composite_builder }

  personal:
    group: execution_engine
    enabled: true
    layers:
      natal:        { enabled: true, weight: 1.00, submodule: data:natal_personal }
      transit:      { enabled: true, weight: 1.00, submodule: data:ephem_hourly }
      progressed:   { enabled: true, weight: 0.90, submodule: eng:progressed_secondary }
      solar_arc:    { enabled: true, weight: 0.95, submodule: eng:solar_arc }
      composite:    { enabled: false, weight: 1.10, submodule: data:natal_composite }
      davison:      { enabled: false, weight: 1.05, submodule: data:natal_composite }
      harmonic:     { enabled: true, weight: 0.50, set: "1-12", submodule: eng:harmonics }
      draconic:     { enabled: true, weight: 0.60, submodule: eng:draconic }
      declination:  { enabled: true, weight: 0.60, submodule: eng:declination }
      eclipses_saros: { enabled: true, weight: 1.20, submodule: eng:eclipses }
      fixed_stars:     { enabled: false, weight: 0.40, submodule: data:fixed_stars }
      symbol_log:      { enabled: false, weight: 0.25, submodule: data:event_log }

  houses:
    group: semantics_shared
    enabled: true
    layers:
      house_channels:
        enabled: true
        weight: 1.00
        normalization: "zscore_tanh"
        corridor: "normalized"
        bridge_to_semantic_channels: true
        submodule: eng:house_channels
        progressed_cusps_enabled_if_submodule_active: eng:progressed_secondary
      system_sweep:   { enabled: false, submodule: houses:system_sweep }
      tenants_curve:  { enabled: false, submodule: houses:tenants_sigmoid }

  mundane:
    group: governance_policy
    enabled: false
    usa_gate: false
    layers:
      usa_sibly_natal:  { enabled: true, weight: 1.00, submodule: data:natal_usa }
      mundane_transits: { enabled: true, weight: 1.00, submodule: data:ephem_monthly }
      mundane_eclipses: { enabled: true, weight: 1.15, submodule: eng:eclipses }

  visualization:
    group: visualization_orchestration
    enabled: true
    layers:
      line_corridor:        { enabled: true, submodule: viz:line_corridor }
      overlay_multi_subject:{ enabled: false, submodule: viz:overlay_multi_subject }
      event_bands:          { enabled: true, submodule: viz:event_bands }
      channel_stack:        { enabled: false, submodule: viz:channel_stack }
      house_radar:          { enabled: true, submodule: viz:house_radar }
      house_stream:         { enabled: false, submodule: viz:house_stream }
      theme_light:          { enabled: true, submodule: viz:theme_light }
      theme_dark:           { enabled: true, submodule: viz:theme_dark }
      style_minimal:        { enabled: true, submodule: viz:style_minimal }
      style_detailed:       { enabled: true, submodule: viz:style_detailed }
      access_colorblind:    { enabled: true, submodule: viz:access_colorblind }
      tooltip_annotations:  { enabled: false, submodule: viz:tooltip_annotations }
      label_density_auto:   { enabled: true, submodule: viz:label_density_auto }
      export_png:           { enabled: true, submodule: viz:export_png }
      export_pdf:           { enabled: false, submodule: viz:export_pdf }
      export_csv_bins:      { enabled: false, submodule: viz:export_csv_bins }
      scenario_compare:     { enabled: false, submodule: viz:scenario_compare }
      calendar_heatmap:     { enabled: false, submodule: viz:calendar_heatmap }

  observability:
    group: observability_provenance
    enabled: true
    layers:
      alert_hooks:    { enabled: false, submodule: obs:alert_hooks }

  schemas:
    group: data_validation
    enabled: true
    layers:
      individuals_schema: { enabled: true, submodule: schema:individuals }
      event_log_schema:   { enabled: true, submodule: schema:event_log }
      ephemeris_schema:   { enabled: true, submodule: schema:ephemeris_normalized }
      validator:          { enabled: true, submodule: schema:validator }
      compiler:           { enabled: true, submodule: schema:compiler }
      lint:               { enabled: true, submodule: schema:lint }
      diagnostics:        { enabled: true, submodule: schema:diagnostics }

# ----------------------------------------------------------------------
# SUBJECTS (token resolution â real names via Individuals CSV)
# ----------------------------------------------------------------------
subjects:
  tokens:
    USER_PRIMARY:
      source: "Individuals CSV"
      match_strategy: "by_run_arg_or_default"
      required: true
    USER_SECONDARY:
      source: "Individuals CSV"
      match_strategy: "by_run_arg_optional"
      required: false
    USER_COMPOSITE:
      source: "computed"
      build_if: ["USER_PRIMARY","USER_SECONDARY"]
    ENTITY_USA:
      source: "USA dataset"
      gated_by: "policies.run_scope.exclude_usa_data_by_default"
  display_names:
    resolve_runtime_labels: true
    csv_display_field_order: ["preferred_name","display_name","full_name","id"]
    fallback_tokens:
      USER_PRIMARY: "Primary"
      USER_SECONDARY: "Secondary"
      USER_COMPOSITE: "Composite"
      ENTITY_USA: "USA"
    redact_if_no_consent: true
  privacy:
    anonymize_in_provenance_if_redacted: true
    export_min_fields_when_redacted: ["who_token","window","run_id"]
    consent_field: "consent_name_display"
  routing:
    natal_for_USER_PRIMARY:   data:natal_personal
    natal_for_USER_SECONDARY: data:natal_partner
    natal_for_USER_COMPOSITE: data:natal_composite
    natal_for_ENTITY_USA:     data:natal_usa

# ----------------------------------------------------------------------
# SCORING / STACKING
# ----------------------------------------------------------------------
scoring:
  group: scoring_stacking
  per_hit:
    exactness_formula: "tightness = max(0, 1 - (orb / orb_limit))"
    base_score_formula: "base = tightness Ã aspect.multiplier"
    learned_weight_overrides:
      aspects:  "meta.learned_weights.aspects"
      channels: "meta.learned_weights.channels"
    retro_station:
      apply: true
      retro_multiplier: 1.05
      station_window_hours: 48
      pre_station_multiplier: 1.08
      post_station_multiplier: 1.03
    layer_weighting: { apply: true }
    layer_orb_adjust: { progressed: 0.90, solar_arc: 0.95 }
    channel_weighting: { apply: true }
    sign_deltas:  { apply: true, max_abs: 0.10 }
    house_deltas: { apply: true, max_abs: 0.10 }
    essential_dignities:
      apply: true
      max_abs: 0.08
      domicile:  +0.06
      exaltation:+0.08
      detriment: -0.06
      fall:      -0.08
    tob_attenuation:
      apply_to_house_effects: true
      method: "linear"
      full_effect_if_minutes_leq: 5
      zero_effect_if_minutes_gte: 60
      profile_curve:
        AP-SUPER: "linear"
        AP-DEBUG: "linear"
        AP-LITE:  "step"
        AP-STRICT:"step"
        AP-HOUSES:"linear"
        AP-SYN:   "linear"
    house_channel_weighting:
      apply: true
      weight_source: "modules.houses.layers.house_channels.weight"
    isolation:
      compute_event_layers_only: false
      compute_semantic_channels_only: false
      compute_house_channels_only: false
  stacking:
    method: "softcap_sum"
    synergy_multiplier: 1.05
    cap: 9999
    components:
      include_semantic_channels: true
      include_house_channels: true
      include_event_layers: true
      exclude_groups_if_submodules_missing: true
    taxonomy:
      relationship:
        children: ["relationship_bonding","relationship_tension","relationship_integration"]
        child_contribution_cap_abs: 12
  house_bridge:
    enable: true
    bridge_scale: 0.85
    global_bridge_clamp_abs: 0.15
    only_if_submodule_active: shared:house_bridge
    mappings:
      "1":  [ { channel: "communication_thought",  multiplier_delta: +0.02 }, { channel: "conflict_pressure", multiplier_delta: +0.02 } ]
      "2":  [ { channel: "finance_resources",      multiplier_delta: +0.06 } ]
      "3":  [ { channel: "communication_thought",  multiplier_delta: +0.05 } ]
      "4":  [ { channel: "health_body_mind",       multiplier_delta: +0.02 } ]
      "5":  [ { channel: "creativity_flow",        multiplier_delta: +0.07 }, { channel: "relationship", multiplier_delta: +0.03 } ]
      "6":  [ { channel: "health_body_mind",       multiplier_delta: +0.06 }, { channel: "career_status", multiplier_delta: +0.03 } ]
      "7":  [ { channel: "relationship",           multiplier_delta: +0.08 } ]
      "8":  [ { channel: "finance_resources",      multiplier_delta: +0.06 }, { channel: "transformation_crisis", multiplier_delta: +0.05 } ]
      "9":  [ { channel: "spirituality_meaning",   multiplier_delta: +0.05 }, { channel: "career_status", multiplier_delta: +0.02 } ]
      "10": [ { channel: "career_status",          multiplier_delta: +0.08 }, { channel: "conflict_pressure", multiplier_delta: +0.02 } ]
      "11": [ { channel: "creativity_flow",        multiplier_delta: +0.03 }, { channel: "career_status", multiplier_delta: +0.02 } ]
      "12": [ { channel: "memory_dream",           multiplier_delta: +0.06 }, { channel: "health_body_mind", multiplier_delta: +0.03 } ]
  internal_external_split:
    base_external_pct: 50
    modifiers:
      angles_contact: +15
      public_houses: +10
      private_houses: -10
      outer_planet_trigger: +5
      neptune_chiron_12th: -10
    clamp_0_100: true
  guardrails:
    per_hit:
      sign_deltas_abs_max: 0.10
      house_deltas_abs_max: 0.10
      layer_weight_range: [0.25, 1.25]
      channel_multiplier_range: [0.80, 1.20]
      aspect_multiplier_range: [0.30, 1.80]
    bridge:
      scale_range: [0.00, 1.00]
      global_clamp_abs_max: 0.25
    internal_external_split:
      base_external_pct_range: [0, 100]
    on_violation: "fail_with_message"

# ----------------------------------------------------------------------
# NORMALIZATION
# ----------------------------------------------------------------------
normalization:
  group: normalization_thresholds
  method: "zscore_tanh"
  scale_min: -100
  scale_max: 100
  thresholds:
    low_abs_lt:   &THRESH_LOW 33
    medium_abs_lt:&THRESH_MED 66
    high_abs_gte: &THRESH_HIGH 66
  boundary_policy:
    compare_mode: "abs_value"
    equality_rule: { medium: "exclusive", high: "inclusive" }
    rounding: { enable: true, method: "round_half_up", decimals: 0 }
  per_module_domains:
    enable: true
    domains: ["event_layers","semantic_channels","house_channels"]
  robust_fallback:
    enable: true
    trigger_when: { n_bins_lt: 6, z_std_lt: 1.0e-6, unique_values_lte: 3 }
    method: "mad_tanh"
  apply_to: ["corridor_total","channel_corridors","house_corridors"]
  domain_soft_caps:
    enable: true
    caps:
      event_layers:        92
      semantic_channels:   92
      house_channels:      92

# ----------------------------------------------------------------------
# HOUSES (first-class mechanics; streaming occupancy)
# ----------------------------------------------------------------------
house_channels:
  group: semantics_shared
  enabled: true
  corridor: { normalized: true }
  cusp_contacts:
    enable: true
    orb_deg: 1.0
    angular_bonus: 1.20
    succedent_bonus: 1.05
    cadent_bonus: 0.90
    treat_cusp_as_flashpoint: true
  ruler_contacts:
    enable: true
    bonus_multiplier: 1.08
    include_dispositors: false
  natal_tenants:
    apply_bias: true
    per_personal_planet: +0.05
    per_outer_planet: +0.03
    decay_by_cusp_distance: true
    max_bias: 0.15
    distance_curve: "sigmoid"
    sigmoid:
      k: 6.0
      midpoint_deg: 2.0
      max_bias: 0.15
  transiting_through:
    enable: true
    slow_planet_weight: 0.50
    fast_planet_weight: 0.20
    require_min_duration_hours: 6
    streaming_mode: true
  polarity_links:
    enable: true
    annotate_partner_house: true
    partner_map: { "1":7, "2":8, "3":9, "4":10, "5":11, "6":12, "7":1, "8":2, "9":3, "10":4, "11":5, "12":6 }
  angular_weighting: { 1: 1.20, 4: 1.15, 7: 1.20, 10: 1.25, default: 1.00, doc_note: "Angular bonuses defined here are the sole source for house-weight references used by scoring and bridge logic." }
  intercepted_signs: { attenuate_sign_bias: true, factor: 0.7 }
  progressed_cusps: { enable: true, method: "secondary", ruler_shift_bonus: 1.05 }
  eclipses_nodes:
    treat_eclipse_in_house_as_high: true
    node_axis_bonus: { h1_h7: 1.10, h4_h10: 1.10, default: 1.05 }
  tob_attenuation: { adopt_from_scoring: true }
  missing_coords_policy:
    on_missing: "widen_windows_and_flag"
    widen_minutes: 30
  guardrails:
    cusp_orb_deg_max: 3.0
    angular_weighting_range: [0.80, 1.30]
    transiting_through_weight_max: 1.00
    tob_uncertainty_minutes_max: 180
    on_violation: "warn_and_clamp"

# ----------------------------------------------------------------------
# CHANNELS (examples + microchannels) â extend as needed
# ----------------------------------------------------------------------
channels:
  memory_dream:
    label: "Memory / Dreams / Symbolic Recall"
    default_valence: "neutral"
    external_bias: -5
    multiplier: 1.00
    rules:
      planet_pairs_any: [[Moon,Neptune],[Mercury,Neptune],[Moon,12th]]
      aspects_any: [conjunction,trine,sextile,opposition,square]
      house_affinities: { 12: { external_bias_delta: -5, multiplier_delta: +0.03 } }
    sign_overrides:
      Aries:      { multiplier_delta: +0.04 }
      Taurus:     { multiplier_delta: +0.03 }
      Gemini:     { multiplier_delta: +0.05 }
      Cancer:     { multiplier_delta: +0.06 }
      Leo:        { multiplier_delta: +0.04 }
      Virgo:      { multiplier_delta: -0.04 }
      Libra:      { multiplier_delta: +0.03 }
      Scorpio:    { multiplier_delta: +0.07 }
      Sagittarius:{ multiplier_delta: +0.05 }
      Capricorn:  { multiplier_delta: -0.02 }
      Aquarius:   { multiplier_delta: +0.06 }
      Pisces:     { multiplier_delta: +0.08 }

  relationship:
    label: "Relationship / Bonding / Tension"
    default_valence: "mixed"
    external_bias: +10
    multiplier: 1.05
    rules:
      planet_pairs_any: [[Venus,Mars],[Venus,Pluto],[Moon,Venus],[Sun,Venus]]
      houses_any: [5,7,8]
      aspects_any: [conjunction,trine,sextile,square,opposition]
      house_affinities: { 7: { external_bias_delta: +8, multiplier_delta: +0.05 } }

  relationship_bonding:
    taxonomy: { parent: "relationship" }
    label: "Relationship â Bonding"
    default_valence: "positive"
    external_bias: +6
    multiplier: 1.00
    rules:
      planet_pairs_any: [[Venus,Moon],[Sun,Venus],[Jupiter,Venus]]
      aspects_any: [conjunction,trine,sextile]
      houses_any: [5,7,11]

  relationship_tension:
    taxonomy: { parent: "relationship" }
    label: "Relationship â Tension"
    default_valence: "mixed"
    external_bias: +8
    multiplier: 1.02
    rules:
      planet_pairs_any: [[Venus,Mars],[Venus,Pluto],[Mars,Saturn]]
      aspects_any: [square,opposition,conjunction]
      houses_any: [7,8,1]

  relationship_integration:
    taxonomy: { parent: "relationship" }
    label: "Relationship â Integration"
    default_valence: "positive"
    external_bias: +4
    multiplier: 1.00
    rules:
      planet_pairs_any: [[Venus,Saturn],[Venus,Node],[Sun,Saturn]]
      aspects_any: [sextile,trine,conjunction]
      houses_any: [7,10]

  career_status:
    label: "Career / Recognition / Status"
    default_valence: "positive"
    external_bias: +15
    multiplier: 1.05
    rules:
      planet_pairs_any: [[Sun,Jupiter],[Sun,Saturn],[Jupiter,MC],[Saturn,MC]]
      houses_any: [10]
      aspects_any: [conjunction,trine,sextile,square,opposition]
      house_affinities: { 10: { external_bias_delta: +10, multiplier_delta: +0.05 }, 6: { multiplier_delta: +0.03 }, 2: { multiplier_delta: +0.02 } }

# ----------------------------------------------------------------------
# GRAPH / VISUALIZATION ROUTER & DEFAULTS
# ----------------------------------------------------------------------
graph:
  group: visualization_orchestration
  corridor:
    only_if_submodule_active: viz:line_corridor
  event_type_template:
    only_if_submodule_active: viz:event_bands
  houses_view:
    only_if_submodule_active: viz:house_radar
  scenario_compare:
    only_if_submodule_active: viz:scenario_compare
  calendar_heatmap:
    only_if_submodule_active: viz:calendar_heatmap

visualization:
  defaults:
    theme: "auto"
    style: "minimal"
    accessibility:
      colorblind_safe: true
    annotations:
      tooltips: false
      auto_label_density: true
    export:
      png: true
      pdf: false
      csv_bins: false

# ----------------------------------------------------------------------
# OUTPUT / QA / PROVENANCE / EXPORT PRIVACY
# ----------------------------------------------------------------------
output:
  group: observability_provenance
  tagging_header: "[APCFG rules=YAML v{meta.version}]"
  resolve_subject_labels: true
  show_tokens_if_unresolved: true
  redact_names: false
  echo_house_system: true
  non_negotiables:
    include_orb_of_influence: true
    include_energy_type: true
    include_event_precision: true
    include_prob_external_label: true
    projection_safeguard_line: true
  explainability:
    top_spikes_to_detail: 2
    hits_per_spike: 5
    include_one_liners: true
    event_trace_taps:
      enable: false
      top_n_per_bin: 5
      fields: ["when_bin","module","submodule","layer","aspect","orb","score","channel_or_house"]
      export_csv: false
  watchlist:
    micro_window_threshold_abs: *THRESH_MED
    one_recommended_action: true
  qa_checklist:
    append_to_every_run: true
    fields:
      - "External sources consulted: Yes/No"
      - "YAML version used: v{meta.version}"
      - "Active modules: {resolved_modules}"
      - "Active submodules: {resolved_submodules}"
      - "Active framework groups: {active_framework_groups}"
      - "Policy recap: USA gated={policies.run_scope.exclude_usa_data_by_default}, Proxy allowed={policies.proxy_data.allow}, Consent redaction={subjects.display_names.redact_if_no_consent}"
      - "All non-negotiables satisfied: Yes/No"
      - "Resolved profile signature: {resolved_profile_signature}"
      - "RNG seed used: {rng_seed}"
      - "TZ banner: local={local_tz}, utc_offset={utc_offset}"
      - "House system consensus (if sweep): {house_system_consensus_pct}"
      - "CSV engine: {csv_engine_used}, chunks: {csv_chunks_read}"
      - "Validated rows â individuals={rows_validated_individuals} (skipped={rows_skipped_individuals})"
      - "Validated rows â event_log={rows_validated_event_log} (skipped={rows_skipped_event_log})"
      - "Validated rows â ephemeris={rows_validated_ephemeris} (skipped={rows_skipped_ephemeris})"
      - "Referential integrity â event_log.who unresolved: {referential_issues_event_log_who}"

provenance:
  group: observability_provenance
  record_framework_groups: true
  fields:
    - active_framework_groups
    - plan_hash
    - ephemeris_hourly_sha256
    - ephemeris_monthly_sha256
    - natal_files_sha256
    - resolved_profile_signature
    - rng_seed
    - schema_version
    - schema_source
    - schema_hash
    - compiled_validators_hash
    - projection_signature
    - csv_engine_used
    - csv_chunks_read
    - rows_validated_individuals
    - rows_skipped_individuals
    - rows_validated_event_log
    - rows_skipped_event_log
    - rows_validated_ephemeris
    - rows_skipped_ephemeris
    - referential_issues_event_log_who
  record_hashes: true
  include_active_submodules: true
  include_module_versions: true
  include_subject_tokens: true

export:
  privacy:
    enforce_redaction_on_export: true

# ----------------------------------------------------------------------
# POLICIES / PROFILES / BACK-COMPAT / DEPRECATIONS
# ----------------------------------------------------------------------
policies:
  run_scope:
    only_user_chart_for_general_queries: true
    prompt_before_including_other_individuals: true
    exclude_usa_data_by_default: true
  proxy_data: { allow: false, if_used_must_prompt_user: true }
  if_day_precision_disallowed: { message: "not day-precise; windowed only." }
  missing_or_ambiguous_rule: { use_yaml_default_and_flag: true }
  house_system_overrides: { allow_per_run_override: true }

profiles:
  group: profiles_presets
  AP-SUPER:
    use_preset: "full_day_super"
    overrides:
      normalization.per_module_domains.enable: true
      scoring.house_bridge.bridge_scale: 0.85
      scoring.house_bridge.global_bridge_clamp_abs: 0.15
      visualization.defaults.theme: "dark"
      visualization.defaults.style: "detailed"
      visualization.defaults.annotations.tooltips: true
      modules.visualization.layers.scenario_compare.enabled: true
      modules.visualization.layers.calendar_heatmap.enabled: true
      modules.houses.layers.tenants_curve.enabled: true
  AP-LITE:
    use_preset: "transit_only_minimal"
    overrides:
      normalization.per_module_domains.enable: false
      scoring.house_bridge.enable: false
      scoring.house_bridge.global_bridge_clamp_abs: 0.00
      visualization.defaults.theme: "light"
      visualization.defaults.style: "minimal"
      visualization.defaults.annotations.tooltips: false
  AP-STRICT:
    use_preset: "transit_only_minimal"
    overrides:
      normalization.per_module_domains.enable: false
      scoring.house_bridge.enable: false
      scoring.house_bridge.global_bridge_clamp_abs: 0.00
      scoring.per_hit.sign_deltas.apply: false
      scoring.per_hit.house_deltas.apply: false
      scoring.per_hit.isolation.compute_event_layers_only: true
      visualization.defaults.theme: "light"
      visualization.defaults.style: "minimal"
      visualization.defaults.annotations.tooltips: false
      validation.failure_policy.on_violation: "fail"
      validation.referential_integrity.checks[0].on_missing: "fail_with_message"
  AP-DEBUG:
    use_preset: "full_day_debug"
    overrides:
      normalization.per_module_domains.enable: true
      output.explainability.event_trace_taps.enable: true
      engine.resolver.emit_plan_banner: true
      engine.resolver.log_cost_estimates: true
      modules.houses.layers.system_sweep.enabled: true
      modules.houses.layers.tenants_curve.enabled: true
      modules.observability.layers.alert_hooks.enabled: true
      observability.alert_hooks.dry_run: true
      engine.progressions.granularity: "secondary+tertiary"
      visualization.defaults.theme: "dark"
      visualization.defaults.style: "detailed"
      visualization.defaults.annotations.tooltips: true
      visualization.defaults.accessibility.colorblind_safe: true
  AP-HOUSES:
    use_preset: "house_focus_primary"
    overrides:
      normalization.per_module_domains.enable: true
      scoring.house_bridge.enable: true
      scoring.house_bridge.bridge_scale: 0.60
      scoring.house_bridge.global_bridge_clamp_abs: 0.10
      visualization.defaults.theme: "light"
      visualization.defaults.style: "detailed"
      visualization.defaults.annotations.tooltips: true
      modules.houses.layers.system_sweep.enabled: true
      modules.houses.layers.tenants_curve.enabled: true
  AP-SYN:
    use_preset: "relationship_day"
    overrides:
      normalization.per_module_domains.enable: true
      scoring.house_bridge.enable: true
      scoring.house_bridge.bridge_scale: 0.85
      scoring.house_bridge.global_bridge_clamp_abs: 0.15
      visualization.defaults.theme: "dark"
      visualization.defaults.style: "detailed"
      visualization.defaults.annotations.tooltips: true
      modules.visualization.layers.scenario_compare.enabled: true
  AP-MUNDANE:
    use_preset: "mundane_focus"
    overrides:
      policies.run_scope.exclude_usa_data_by_default: false
      normalization.per_module_domains.enable: true
      visualization.defaults.theme: "light"
      visualization.defaults.style: "minimal"
      visualization.defaults.export.pdf: true
      visualization.defaults.export.png: false
  AP-PHASES:
    use_preset: "phases_focus"
    overrides:
      visualization.defaults.theme: "light"
      visualization.defaults.style: "detailed"
      visualization.defaults.annotations.tooltips: true
      modules.visualization.layers.calendar_heatmap.enabled: true

profiles_backcompat:
  AP-SUPER:  { use_preset: "full_day_super" }
  AP-LITE:   { use_preset: "transit_only_minimal" }
  AP-STRICT: { use_preset: "transit_only_minimal",
               overrides: { output.explainability.hits_per_spike: 0,
                            graph.event_type_template.enabled: false } }

deprecations:
  modules:
    - name: "shared:viz_core"
      deprecated_since: "2.10.2"
      replacement: "viz:line_corridor"
      sunset_date: "2025-12-31"
    - name: "shared:viz_event_tpl"
      deprecated_since: "2.10.2"
      replacement: "viz:event_bands"
      sunset_date: "2025-12-31"
    - name: "shared:viz_house_views"
      deprecated_since: "2.10.2"
      replacement: "viz:house_radar"
      sunset_date: "2025-12-31"

# ----------------------------------------------------------------------
# SCHEMAS MODULE (embedded)
# ----------------------------------------------------------------------
schemas:
  constants:
    tz_default: "America/New_York"
    sep:        "; "
    date_fmt:   "YYYY-MM-DD"
    dt_fmt:     "YYYY-MM-DD HH:MM"
    dt_fmt_s:   "YYYY-MM-DD HH:MM:SS"
    time_fmts:  ["HH:MM","HH:MM:SS"]
  version: v1.5.0
  hash: null
  timezone_default: "America/New_York"
  list_separator: "; "
  probability_sum_rule: true
  tob_rules:
    tob_known_requires_time: true
    widen_windows_if_unknown:
      est: "Â±0:45"
      unknown: "Â±3:00"
  header_normalization:
    enable: true
    rules: ["lowercase","trim","collapse_spaces","collapse_underscores"]
  aliases:
    individuals:
      name: display_name
      display: display_name
      consent_display: consent_name_display
      timezone: tz
      lat: coords_lat
      lon: coords_lon
    event_log:
      external_prob: external_likelihood_pct
      internal_prob: internal_likelihood_pct
      who_id: who
      timestamp: when
    ephemeris_normalized:
      speed: speed_deg_per_day
      rg: retrograde
      long: longitude_deg
  files:
    ephemeris_normalized:
      required: true
      description: Canonical ingest after normalization.
      columns:
        datetime_local: { type: datetime, format: "YYYY-MM-DD HH:MM:SS", tz: "America/New_York", required: true }
        datetime_utc:   { type: datetime, format: "YYYY-MM-DD HH:MM:SS", tz: UTC,               required: true }
        body:
          type: string
          enum: [Sun, Moon, Mercury, Venus, Mars, Jupiter, Saturn, Uranus, Neptune, Pluto, NodeN, NodeS, ASC, MC, DSC, IC]
          required: true
        longitude_deg:      { type: number, range: [0, 360], required: true }
        speed_deg_per_day:  { type: number, required: false }
        retrograde:         { type: boolean, required: false }
        pos_str:            { type: string, required: false }
    individuals:
      required: true
      primary_key: [id]
      columns:
        id:               { type: string, required: true }
        preferred_name:   { type: string, required: false }
        display_name:     { type: string, required: false }
        full_name:        { type: string, required: false }
        dob:              { type: date, format: "YYYY-MM-DD", required: true }
        tob_known:        { type: boolean, required: true }
        tob:              { type: time, format_any_of: ["HH:MM","HH:MM:SS"], required_if: { tob_known: true } }
        tz:               { type: string, required: true }
        consent_name_display: { type: boolean, default: true, required: false }
        coords_lat:       { type: number, required: false }
        coords_lon:       { type: number, required: false }
        exclude:          { type: boolean, default: false, required: false }
      constraints:
        - at_least_one_present: [preferred_name, display_name, full_name, id]
    event_log:
      required: true
      primary_key: [id]
      columns:
        id:                      { type: string, required: true }
        date_logged:             { type: date, format: "YYYY-MM-DD", required: true }
        when:                    { type: datetime, format: "YYYY-MM-DD HH:MM", required: false }
        who:                     { type: string, required: true }
        details:                 { type: string, required: true }
        astro_events:            { type: list, sep: "; ", required: false }
        users_involved:          { type: list, sep: "; ", required: false }
        external_likelihood_pct: { type: integer, range: [0, 100], required: false }
        internal_likelihood_pct: { type: integer, range: [0, 100], required: false }
      constraints:
        - if_both_present_sum_to: [external_likelihood_pct, internal_likelihood_pct, 100]

# ----------------------------------------------------------------------
# TESTING (schema & profile sanity)
# ----------------------------------------------------------------------
testing:
  golden_fixtures:
    enabled: true
    suites:
      personal: { assert_known_hits: true, assert_corridor_shape: true }
      houses:   { assert_cusp_ruler_occupancy: true, assert_polarity_links: true }
      shared:   { assert_channel_routing: true, assert_bridge_deltas_clamped: true }
      core:     { assert_threshold_mapping: true, assert_normalization_domains: true }
  cli:
    enabled: true
    commands:
      - "astro run --who USER_PRIMARY --start 2025-08-27 --end 2025-08-27 --profile AP-LITE"
      - "astro run --who USER_PRIMARY,USER_SECONDARY --start 2025-08-27 --end 2025-08-27 --profile AP-SYN"
      - "astro run --who USER_PRIMARY,USER_SECONDARY,USER_COMPOSITE --start 2025-08-27 --end 2025-08-27 --profile AP-SUPER"
      - "astro run --who ENTITY_USA --start 2025-08-27 --end 2025-08-27 --profile AP-MUNDANE"
  profile_consistency:
    AP-STRICT:
      expect:
        scoring.per_hit.sign_deltas.apply: false
        scoring.per_hit.house_deltas.apply: false
        scoring.per_hit.isolation.compute_event_layers_only: true
        scoring.house_bridge.enable: false
        visualization.defaults.style: "minimal"
    AP-LITE:
      expect:
        scoring.house_bridge.enable: false
        visualization.defaults.style: "minimal"
    AP-SUPER:
      expect:
        visualization.defaults.style: "detailed"
        scoring.house_bridge.global_bridge_clamp_abs: 0.15
    AP-HOUSES:
      expect:
        scoring.house_bridge.global_bridge_clamp_abs: 0.10
  schema_consistency:
    expect_version: "v1.5.0"
    expect_files_present: ["ephemeris_normalized","individuals","event_log"]
    expect_individuals_primary_key: ["id"]
    expect_event_log_primary_key: ["id"]
    expect_ephemeris_required: true
    expect_constants:
      tz_default: "America/New_York"
      sep: "; "
  schema_diagnostics:
    expect_no_unknown_columns: true
    expect_no_duplicate_headers: true

# ======================================================================
# END OF FILE
# ======================================================================
