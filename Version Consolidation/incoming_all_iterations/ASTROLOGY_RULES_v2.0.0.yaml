# ASTROLOGY_RULES_v2.0.0.yaml
# Unified ruleset for personal and mundane probability-corridor charts

meta:
  version: 2.0.0
  apcfg_header_tag: "[APCFG rules=YAML v2.0.0]"
  description: >
    Default profiles and plotting/analysis rules for (a) personal windows
    (one or two people + composite) and (b) mundane nation-state/event corridors.
    Uses standardized scoring → z-normalization → Normal CDF Φ(z) to yield
    probability-like values in [0,1], then optional smoothing and peak detection.

defaults:
  timezone: "America/New_York"
  ephemeris_source: "Swiss"   # or "JPL-DE431" if available
  # Time resolution policy: choose the smallest unit that keeps noise manageable.
  time_resolution:
    short_window_hours: 1      # <= 7-day spans
    medium_window_hours: 6     # 1–3 months
    long_window_days: 1        # > 3 months
  interpolation: "cubic"
  # Gaussian kernel widths for smoothing (used after z→Φ transform)
  smoothing_windows:
    personal_hours: 2          # keeps sharp intra-day peaks
    mundane_days: 30           # highlights major arcs
  # Peak extraction defaults (post-smoothing, on Φ-series)
  peak_detection:
    prominence_quantile: 0.85  # adapt to scale; use quantile of prominence
    min_separation:
      personal_hours: "3h"
      mundane_days: "14d"
    annotate_top_k: 8

bodies:
  luminaries: [Sun, Moon]
  personals: [Mercury, Venus, Mars]
  socials:   [Jupiter, Saturn]
  outers:    [Uranus, Neptune, Pluto]
  angles:    [ASC, DSC, MC, IC]   # if available for natal
  # Baseline planet valence (signed contribution; tunable)
  valence:
    Sun:    0.60
    Moon:   0.40
    Mercury:0.20
    Venus:  0.80
    Mars:  -0.70
    Jupiter:1.00
    Saturn:-0.80
    Uranus:-0.50
    Neptune:-0.30
    Pluto: -0.90
  # Angular/natal point multipliers when targeted by transits/progressions/arcs
  angle_multipliers:
    ASC: 1.30
    DSC: 1.10
    MC:  1.40
    IC:  1.10
    HouseCusp: 1.00

aspects:
  types:
    conjunction:
      name: "conjunction"
      degrees: 0
      polarity:  +1.00     # magnitude; sign also via planet valences
      base_orb_deg: 8
    opposition:
      name: "opposition"
      degrees: 180
      polarity:  -0.90
      base_orb_deg: 7
    square:
      name: "square"
      degrees: 90
      polarity:  -0.80
      base_orb_deg: 6
    trine:
      name: "trine"
      degrees: 120
      polarity:  +0.60
      base_orb_deg: 6
    sextile:
      name: "sextile"
      degrees: 60
      polarity:  +0.40
      base_orb_deg: 4
    quincunx:
      name: "quincunx"
      degrees: 150
      polarity:  -0.30
      base_orb_deg: 3
  # Orb scaling by body class (wider for luminaries, tighter for outers)
  orb_multipliers:
    luminaries: 1.4
    personals:  1.2
    socials:    1.0
    outers:     0.8
    angles:     1.5
  # Orb falloff curve: Gaussian by default, smooth and differentiable
  orb_decay:
    type: "gaussian"
    sigma_scale: 0.40    # sigma = base_orb_deg * orb_multiplier * sigma_scale

layers:
  # Which motion layers to compute/stack by profile
  transit:
    enabled: true
    weight: 1.00
  secondary_progression:
    enabled: true
    weight: 0.75
    day_per_year: true
    fallback_if_missing_ephemeris: true   # if pre-1900 ephemeris absent, skip gracefully
  solar_arc:
    enabled: true
    weight: 0.60
    arc_key: "Sun"          # Naibod arc from progressed Sun; add to all natal points

scoring:
  # Core signed score before normalization; computed per timestamp
  # For each (moving_body → target_point) within orb:
  #   s += (valence[moving] + valence[target|0]) *
  #        aspect.polarity *
  #        orb_decay(delta_degrees) *
  #        target_multiplier
  # Then sum across all aspects in enabled layers, each scaled by its layer weight.
  target_priority:
    # Emphasize natal angles/points when present
    order: [ASC, MC, DSC, IC, Sun, Moon, Mercury, Venus, Mars, Jupiter, Saturn, Uranus, Neptune, Pluto]
    multiplier_boost: 1.20   # extra weight for top-ranked targets (first 4)
  house_weights:
    # Optional — small boosts for houses by theme; set to 1.0 to neutralize
    H1: 1.05; H2: 1.00; H3: 1.00; H4: 1.05; H5: 1.00; H6: 1.00
    H7: 1.05; H8: 1.00; H9: 1.00; H10:1.10; H11:1.00; H12:1.00
  channel_maps:
    # Allows “channels” (e.g., Light/Valence/Composite) to subset/weight planets/aspects.
    # If omitted, use ALL with weights 1.0.
    personal_default:
      include_planets: "ALL"
      aspect_weights:
        conjunction: 1.00
        opposition:  1.00
        square:      1.00
        trine:       0.90
        sextile:     0.80
        quincunx:    0.70
    tension_only:
      include_planets: "ALL"
      aspect_weights:
        square: 1.00
        opposition: 1.00
        quincunx: 0.80
        conjunction: 0.60
        trine: 0.00
        sextile: 0.00
    harmony_only:
      include_planets: "ALL"
      aspect_weights:
        trine: 1.00
        sextile: 0.90
        conjunction: 0.60
        square: 0.00
        opposition: 0.00
        quincunx: 0.30

normalization:
  # Convert raw signed series → standardized z → probability Φ(z)
  rolling_baseline_days: 365      # rolling window for mean/std (mild seasonality)
  min_std_epsilon: 1.0e-6
  transform: "normal_cdf"         # Φ(z); yields corridor in [0,1]
  invert_for_distress_mode: false # set true to flip corridor (for “stress index” view)
  # Optional bias correction to keep long spans centered at 0.5
  long_run_centering: true

smoothing:
  personal:
    apply: true
    method: "gaussian"
    window: "2h"
  mundane:
    apply: true
    method: "gaussian"
    window: "30d"

lag_alignment:
  # Diagnostic cross-correlation of corridor vs user-supplied event impulses
  enabled: true
  search_window_days: 3           # check ±3 days
  report_only: true               # never shift the signal; report inferred lag

bootstrap_band:
  # Uncertainty ribbon by jittering coefficients ±10% and re-aggregating
  enabled: true
  n_samples: 200
  jitter_pct: 0.10
  quantiles: [0.25, 0.75]

plotting:
  engine: "matplotlib"
  invariants:
    # Graph invariants you asked to “hard-code” for repeatability
    show_zero_prob_midline: true     # y=0.5 reference
    shade_above_below: true          # green above, red below
    no_grid_stripes: true            # remove distracting column bands
    event_markers_above_plot: true   # labels offset near top, not overlapping data
    keep_style_constant: true        # do not vary style unless explicitly requested
  style:
    line_width: 2.0
    corridor_alpha: 0.15
    probability_midline: 0.50
    shade_above_color: "auto_green"   # mapped to accessible palette
    shade_below_color: "auto_red"
    line_color_person_a: "auto_blue"
    line_color_person_b: "auto_orange"
    line_color_composite: "auto_black"
    line_color_mundane: "auto_purple"
  layout_presets:
    personal_three_panel:
      panels: ["person_a", "person_b", "composite"]
      sharex: true
    personal_composite_only:
      panels: ["composite"]
      sharex: true
    mundane_corridor:
      panels: ["mundane"]
      sharex: true
  event_markers:
    visible: true
    marker_style: "tick+dot"
    size: 9
    linewidth: 1.5
    line_style: "dashed"
    color: "auto_gray_dark"
    # Non-overlapping labels: greedy vertical nudge + leader lines
    label:
      font_size: 9
      max_per_day: 3
      stack_spacing: "0.03y"         # vertical offset in axis fraction
      leader_line: true
      smart_truncate: 48              # characters
      place_outside_title: true       # keep labels out of title area
  legend:
    location: "outside_right"
    prevent_overlap: true
  annotate_peaks:
    enabled: true
    show_prominence: false
    label_format: "{ts:%Y-%m-%d %H:%M}\nΦ={phi:.2f}"

outputs:
  export_series: true
  columns:
    - timestamp
    - profile
    - layer               # transit | progression | solar_arc | stacked
    - channel             # personal_default | tension_only | etc.
    - raw_score
    - z_score
    - phi                 # Φ(z)
    - phi_smoothed
  save_csv: true
  save_png: true
  filename_pattern: "{profile}_{span}_{panel}_{yyyy}{mm}{dd}.(csv|png)"

profiles:
  personal_default:
    description: "One or two individuals plus composite corridor over a short window."
    layers:
      transit: {enabled: true,  weight: 1.00}
      secondary_progression: {enabled: false, weight: 0.00}   # optional for longer spans
      solar_arc: {enabled: false, weight: 0.00}
    channels: ["personal_default"]         # can swap to harmony_only / tension_only
    smoothing_window: "2h"
    plotting_preset: "personal_three_panel"
    peak_detection:
      prominence_quantile: 0.85
      min_separation: "3h"
      annotate_top_k: 8
    time_resolution_mode: "short_window_hours"
    composite:
      method: "mean"          # mean of persons’ Φ after normalization
      weights: [1.0, 1.0]     # A,B; auto-handled if only one person
    events:
      # user-provided timestamps (texts, photos, check-ins) to pin on charts
      label_source_priority: ["custom_label", "event_type", "location"]

  mundane_corridor:
    description: "Nation-state (e.g., USA Sibly) — stacked transits+progressions+solar arc."
    natal_chart: "Sibly_1776-07-04_17:10:00_LMT_Philadelphia"   # override per dataset
    layers:
      transit: {enabled: true,  weight: 1.00}
      secondary_progression: {enabled: true, weight: 0.75}
      solar_arc: {enabled: true, weight: 0.60}
    channels: ["personal_default"]     # full spectrum by default
    smoothing_window: "30d"
    plotting_preset: "mundane_corridor"
    peak_detection:
      prominence_quantile: 0.90
      min_separation: "30d"
      annotate_top_k: 12
    time_resolution_mode: "long_window_days"
    events:
      # typical historical categories for pins
      categories: ["war", "terror", "treaty", "election", "market", "disaster", "court"]

performance:
  caching:
    enable_ephemeris_cache: true
    enable_aspect_cache: true
    cache_key_fields: ["profile", "span", "resolution"]
  vectorization:
    use_numpy: true
    numba_jit: false     # set true if environment supports it
  io:
    chunk_size_days: 3650    # load ephemeris in decade chunks for long spans
  reproducibility:
    random_seed: 42          # for bootstrap ribbon

validation:
  # Quick sanity checks after build
  checks:
    ensure_phi_bounds: true
    ensure_monotone_cdf: true
    ensure_time_gaps_below_hours: 2
    warn_if_label_overflow: true
