# >>> AUTO-GEN BEGIN: CI Workflow v1.1
name: CI
on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b
      - name: Setup Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: "3.11"
          cache: pip
      - name: Install lint dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt bandit pip-audit
      - name: Lint (Ruff)
        run: ruff check --output-format=github .
      - name: Format check (Black)
        run: black --check .
      - name: Security scan (Bandit)
        run: bandit -q -r astroengine app
      - name: Dependency audit (pip-audit)
        run: pip-audit --require-hashes=false
      - name: Type check
        run: |
          pip install mypy pydantic
          mypy .
  tests:
    needs: lint
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            python-version: "3.11"
            coverage: true
          - os: macos-latest
            python-version: "3.11"
            coverage: false
          - os: windows-latest
            python-version: "3.11"
            coverage: false
    steps:
      - name: Checkout
        uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b
      - name: Setup Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Cache Swiss ephemeris
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830
        with:
          path: ~/.astroengine/ephemeris
          key: ${{ runner.os }}-se-${{ hashFiles('datasets/swisseph_stub/**') }}
      - name: Prepare ephemeris path
        shell: bash
        run: |
          mkdir -p "$HOME/.astroengine/ephemeris"
          cp -a datasets/swisseph_stub/. "$HOME/.astroengine/ephemeris/" 2>/dev/null || true
          echo "SE_EPHE_PATH=$HOME/.astroengine/ephemeris" >> "$GITHUB_ENV"
      - name: Install
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          if [ -f pyproject.toml ] || [ -f setup.py ]; then pip install -e . || true; fi
      - name: Build sdist/wheel
        run: |
          pip install build
          python -m build
      - name: Doctor (strict)
        run: |
          python -m astroengine.diagnostics --json > diagnostics.json || true
          python -m astroengine.diagnostics --strict
          python -m astroengine.diagnostics --smoketest "2025-01-01T00:00:00Z" || true
      - name: Full maintenance gate
        run: |
          python -m astroengine.maint --full --strict
      - name: Run tests
        if: ${{ matrix.coverage != 'true' }}
        run: pytest -q
      - name: Run tests with coverage
        if: ${{ matrix.coverage == 'true' }}
        shell: bash
        run: |
          coverage run --source=astroengine.core.angles,astroengine.core.transit_engine,astroengine.detectors.ingresses,astroengine.timelords.dashas,astroengine.engine,astroengine.events -m pytest
          coverage xml
          coverage report --fail-under=90 --include="astroengine/core/angles.py,astroengine/core/transit_engine.py,astroengine/detectors/ingresses.py,astroengine/timelords/dashas.py,astroengine/engine.py,astroengine/events.py" --omit="generated/*"
          python scripts/check_core_coverage.py coverage.xml 0.95 astroengine/core/angles.py astroengine/core/transit_engine.py
          python -m genbadge.main coverage -i coverage.xml -o docs/badges/coverage.svg --local
          git diff --exit-code docs/badges/coverage.svg
      - name: Upload diagnostics
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: diagnostics-${{ matrix.python-version }}
          path: diagnostics.json
      - name: Upload coverage artifacts
        if: ${{ matrix.coverage == 'true' }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: coverage-${{ matrix.python-version }}-${{ matrix.os }}
          path: |
            coverage.xml
            docs/badges/coverage.svg
# >>> AUTO-GEN END: CI Workflow v1.1
