name: ci

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  quality:
    name: Lint & type-check
    runs-on: ubuntu-latest
    timeout-minutes: 20
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          set -eo pipefail
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          pip install -e ".[api,providers,ui]" || pip install -e .

      - name: Lint
        run: |
          ruff check .
          black --check .
          isort --check-only --profile black .

      - name: Type check
        run: |
          pip install mypy
          mypy .

  tests:
    name: Test matrix
    needs: quality
    runs-on: ${{ matrix.os }}
    timeout-minutes: 45
    continue-on-error: ${{ matrix.os == 'windows-latest' }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            coverage: true
          - os: macos-latest
            coverage: false
          - os: windows-latest
            coverage: false
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Cache Swiss ephemeris
        if: ${{ runner.os != 'Windows' }}
        uses: actions/cache@v4
        with:
          path: ~/.astroengine/ephemeris
          key: ${{ runner.os }}-se-${{ hashFiles('datasets/swisseph_stub/**') }}

      - name: Prepare ephemeris path
        if: ${{ runner.os != 'Windows' }}
        run: |
          set -eo pipefail
          mkdir -p "$HOME/.astroengine/ephemeris"
          cp -a datasets/swisseph_stub/. "$HOME/.astroengine/ephemeris/" 2>/dev/null || true
          echo "SE_EPHE_PATH=$HOME/.astroengine/ephemeris" >> "$GITHUB_ENV"

      - name: Install project
        run: |
          set -eo pipefail
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          pip install coverage build
          pip install -e ".[api,providers,ui]" || pip install -e .

      - name: Build distribution artifacts
        if: ${{ matrix.coverage }}
        run: |
          python -m build

      - name: Diagnostics
        if: ${{ runner.os == 'Linux' }}
        run: |
          python -m astroengine.diagnostics --json > diagnostics.json
          python -m astroengine.diagnostics --strict

      - name: Run tests with coverage
        if: ${{ matrix.coverage }}
        run: |
          coverage run --source=astroengine -m pytest
          coverage xml

      - name: Run tests
        if: ${{ not matrix.coverage }}
        run: pytest -q

      - name: Upload diagnostics
        if: ${{ runner.os == 'Linux' }}
        uses: actions/upload-artifact@v4
        with:
          name: diagnostics-${{ matrix.os }}
          path: diagnostics.json

      - name: Upload coverage artifacts
        if: ${{ matrix.coverage }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.os }}
          path: |
            coverage.xml
            dist
