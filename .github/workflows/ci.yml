name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHONUNBUFFERED: "1"
  PIP_DISABLE_PIP_VERSION_CHECK: "1"

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Prime Swiss Ephemeris cache
        run: |
          set -euxo pipefail
          EPHE_DIR="$RUNNER_TEMP/swisseph"
          mkdir -p "$EPHE_DIR"
          cp -a datasets/swisseph_stub/. "$EPHE_DIR/"
          echo "SE_EPHE_PATH=$EPHE_DIR" >> "$GITHUB_ENV"

      - name: Install Python dependencies
        run: |
          set -euxo pipefail
          python -m pip install --upgrade pip wheel
          pip install -e ".[dev]"

      - name: Lint with ruff
        run: |
          set -euxo pipefail
          ruff check .

      - name: Type check with mypy
        run: |
          set -euxo pipefail
          mypy --config-file mypy.ini

      - name: Prepare test reports directory
        run: mkdir -p reports

      - name: Run pytest with coverage
        run: |
          set -euxo pipefail
          pytest \
            --junitxml=reports/pytest.xml \
            --cov=astroengine \
            --cov-report=xml \
            --cov-report=term-missing

      - name: Validate Alembic migrations (SQLite & Postgres)
        env:
          TESTCONTAINERS_RYUK_DISABLED: true
        run: |
          set -euxo pipefail
          python scripts/ci/run_migration_roundtrip.py --backends sqlite postgres

      - name: Run maintenance orchestrator
        run: |
          set -euxo pipefail
          python -m astroengine.maint --full --strict

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: apps/rulepack-authoring-ui/package-lock.json

      - name: Install UI dependencies
        working-directory: apps/rulepack-authoring-ui
        env:
          NEXT_TELEMETRY_DISABLED: "1"
        run: |
          set -euxo pipefail
          npm ci

      - name: Lint UI
        working-directory: apps/rulepack-authoring-ui
        env:
          NEXT_TELEMETRY_DISABLED: "1"
        run: |
          set -euxo pipefail
          npm run lint

      - name: Type check UI
        working-directory: apps/rulepack-authoring-ui
        env:
          NEXT_TELEMETRY_DISABLED: "1"
        run: |
          set -euxo pipefail
          npm run typecheck

      - name: Test UI
        working-directory: apps/rulepack-authoring-ui
        env:
          NEXT_TELEMETRY_DISABLED: "1"
        run: |
          set -euxo pipefail
          npm run test -- --runInBand

      - name: Build UI
        working-directory: apps/rulepack-authoring-ui
        env:
          NEXT_TELEMETRY_DISABLED: "1"
        run: |
          set -euxo pipefail
          npm run build

      - name: Upload Python coverage and test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: python-test-artifacts
          if-no-files-found: ignore
          path: |
            coverage.xml
            reports/pytest.xml

      - name: Codex failure triage (optional)
        if: ${{ failure() && secrets.OPENAI_API_KEY != '' }}
        uses: openai/codex-action@main
        with:
          openai_api_key: ${{ secrets.OPENAI_API_KEY }}
          prompt: >-
            Analyze the failing CI run for AstroEngine, summarizing the root causes and suggesting the minimal code changes needed to pass.
            Refer to the uploaded artifacts when available and prefer concise bullet points.
          codex_args: '["--config","sandbox_mode=\"workspace-read\""]'
